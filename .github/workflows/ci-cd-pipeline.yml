name: CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    name: Build Stage
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Restore dependencies
        run: dotnet restore aspnet-core/CareLine.sln

      - name: Build
        run: dotnet build --no-restore --configuration Release aspnet-core/CareLine.sln

      - name: Publish
        run: dotnet publish aspnet-core/CareLine.sln --no-build --configuration Release --output ./publish

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: app
          path: ./publish

  test:
    name: Test Stage
    runs-on: ubuntu-latest
    needs: build

    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Restore dependencies
        run: dotnet restore aspnet-core/CareLine.sln
  
      - name: Run tests
        run: |
          (cd aspnet-core && dotnet test --verbosity normal)

  deploy:
    name: Deploy Stage
    runs-on: ubuntu-latest
    needs: [build, test]
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
  
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3
  
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: app
          path: ./app
  
      - name: Build Docker image
        run: |
          cd aspnet-core
          docker build -f Dockerfile -t careline:latest .
  
      - name: Verify Docker image
        run: |
          docker images careline:latest
  
      - name: Deploy application
        run: |
          echo "Starting deployment..."
          curl -X POST ${{ secrets.RENDER_DEPLOY_HOOK_URL }}
